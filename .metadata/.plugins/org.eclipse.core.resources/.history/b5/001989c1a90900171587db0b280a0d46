package com.revature.hibernate;

import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;

public class HeroDAOImpl implements HeroDAO{

	private SessionFactory sf = HibernateUtils.getSessionFactory();
	private Session session;
	
	public HeroDAOImpl(){
		session = sf.openSession(); // session per request
	}
	
	public void create(Hero hero) {
		Transaction tx = session.beginTransaction();
		try{
			session.save(hero); 
			tx.commit();
		}catch(Exception e){
			tx.rollback();
		}
	}

	public Hero findOne(int pk) {
		Hero hero = (Hero) session.load(Hero.class, pk); //generate SELECT
		return hero;
	}

	public void update(Hero hero) {
		Transaction tx = session.beginTransaction();
		session.saveOrUpdate(hero);
		tx.commit();
	}

	public void delete(Hero hero) {
		Transaction tx = session.beginTransaction();
		session.delete(hero);
		tx.commit();
	}

	public Hero findByName(String name) {
		// object oriented (use class & property names, not table/column)
		// named parameters!
		String hql = "from com.revature.hibernate.Hero where name = :param";
		Query query = session.createQuery(hql);
		query.setString("param", name);
		//return (List<Hero>) query.list(); // returns multiple Heros
		
		// 100% sure you're only getting back 1
		return (Hero) query.uniqueResult(); 
	}
	
	

}
